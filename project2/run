#!/usr/bin/env python3

import os
from Crypto.PublicKey import RSA
import subprocess

keys_path = "./keys"

# Make the key
def key_generator(key_name):
        key = RSA.generate(2048)
    with open(f"./keys/private_key_{key_name}", "wb") as f:
        os.chmod(f"./keys/private_key_{key_name}", 0o600)
        f.write(key.exportKey("PEM"))
    pubkey = key.publickey()
    with open (f"./keys/public_key.pub_{key_name}", "wb") as f:
        f.write(pubkey.exportKey("OpenSSH"))

# Check if keys path exists, if not, create it
def check_keys():
    print("Checking Whether './keys' path exists")
    if os.path.exists(keys_path):
        print("Creating public and private keys")
        key_generator("database")
        key_generator("application")
    else:
        os.mkdir(keys_path)
        print("Creating public and private keys")
        key_generator("database")
        key_generator("application")

# Check if terraform show returns anything
terr_show = subprocess.run(["terraform", "show"], stdout=subprocess.PIPE, text=True)

print(len(terr_show.stdout))

# If terr_shows doesn't return anythin, run terraform plan and save as tfplan
if len(terr_show.stdout) > 20:
    print("Terraform plan already applied!")
    print(terr_show.stdout)
else:
    check_keys()
    print("Please Wait, making terraform plan")
    terr_plan = subprocess.run(["terraform", "plan", "-out=tfplan"], stdout=subprocess.PIPE, text=True)
    print(terr_plan.stdout)

    # While loops which waits for the user input of yes or no whether to apply the plan
    while True:
        command = input("type 'yes' to apply terraform plan\ntype 'no' to exit\n")
        if command == "yes":
            print("Applying terraform, please wait")
            terr_apply = subprocess.run(["terraform", "apply", "tfplan"], stdout=subprocess.PIPE, text=True)
            print(terr_apply.stdout)
            break
        elif command == "no":
            break
        else:
            pass




